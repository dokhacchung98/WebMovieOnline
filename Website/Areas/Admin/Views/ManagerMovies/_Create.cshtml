@model Website.ViewModel.MoviesViewModel

@{
    ViewBag.Title = "Create";
    Layout = null;
}


<div class="modal-dialog">
    <div class="modal-content">
        @using (Html.BeginForm("Create", "ManagerMovies", FormMethod.Post))
        {
            <div class="modal-header">
                <h4 class="modal-title">Thêm mới bộ phim</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <div class="modal-body">

                @Html.AntiForgeryToken()
                @Html.ValidationSummary("", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name)
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DatePublish)
                    @Html.EditorFor(model => model.DatePublish, new { htmlAttributes = new { @class = "form-control" } })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LengthTime)
                    @Html.EditorFor(model => model.LengthTime, new { htmlAttributes = new { @class = "form-control" } })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Language)
                    @Html.EditorFor(model => model.Language, new { htmlAttributes = new { @class = "form-control" } })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Country)
                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsHot)
                    @Html.EditorFor(model => model.IsHot, new { htmlAttributes = new { @class = "form-control" } })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NameEn)
                    @Html.EditorFor(model => model.NameEn, new { htmlAttributes = new { @class = "form-control" } })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EnableAge)
                    @Html.EditorFor(model => model.EnableAge, new { htmlAttributes = new { @class = "form-control" } })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Thumbnail)
                    @Html.EditorFor(model => model.Thumbnail, new { htmlAttributes = new { @class = "form-control" } })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description)
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CreatedDate)
                    @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-default" data-dismiss="modal" value="Cancel">
                <input type="submit" class="btn btn-success" value="Thêm quyền">
            </div>
        }
    </div>
</div>
